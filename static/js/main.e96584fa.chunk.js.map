{"version":3,"sources":["comps/ImageModal.js","Firebase/firebaseConfig.js","Hooks/ImageFirestore.js","comps/ImageGrid.js","comps/Title.js","Hooks/ImageStorage.js","comps/Progressbar.js","comps/Uploadimage.js","App.js","index.js"],"names":["ImageModal","selectedImage","selectedNewImage","motion","div","className","onClick","e","target","classList","contains","initial","opacity","animate","img","src","alt","y","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storageRef","storage","firestoreRef","firestore","timeStamp","FieldValue","serverTimestamp","ImageFirestore","collection","useState","docs","setNewDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","map","item","layout","whileHover","url","key","transition","delay","Title","ImageStorage","file","progress","setProgress","error","setError","setUrl","imageRef","ref","name","imageurlRef","put","on","percent","bytesTransferred","totalBytes","a","getDownloadURL","createdAt","add","Progressbar","setFile","width","Uploadimage","icon","faPlusCircle","type","onChange","selectedFile","files","includes","style","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e96584fa.chunk.js","sourcesContent":["import React from \"react\";\nimport {motion} from 'framer-motion';\n\nconst ImageModal = ({ selectedImage, selectedNewImage }) => {\n  const modalHandler = (e) => {\n    if (e.target.classList.contains(\"main-modal\")) \n    selectedNewImage(null);\n  };\n  return (\n    <motion.div className=\"main-modal\" onClick={modalHandler}\n      initial={{opacity:0}}\n      animate={{opacity:1}}\n    >\n      <motion.img src={selectedImage} alt=\"update div\" \n      initial={{y:\"-10vh\"}}\n      animate={{y:\"0\"}}\n       />\n    </motion.div>\n  );\n};\n\nexport default ImageModal;\n","import  firebase from 'firebase/app';\nimport 'firebase/firebase-storage';\nimport 'firebase/firebase-firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDfG_pf3iqJbzzJcHpIKC3yoyn3ma950ZA\",\n    authDomain: \"photogallery-7bd81.firebaseapp.com\",\n    projectId: \"photogallery-7bd81\",\n    storageBucket: \"photogallery-7bd81.appspot.com\",\n    messagingSenderId: \"505798834146\",\n    appId: \"1:505798834146:web:6d8af7a23c3ab9233a2bbb\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const storageRef=firebase.storage();\n  const firestoreRef=firebase.firestore();\n  const timeStamp=firebase.firestore.FieldValue.serverTimestamp;\n  export {storageRef,firestoreRef,timeStamp};\n\n\n\n","import  { useEffect, useState } from \"react\";\nimport { firestoreRef } from \"../Firebase/firebaseConfig\";\n\nconst ImageFirestore = (collection) => {\n  const [docs, setNewDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = firestoreRef\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        const documents = [];\n        snap.forEach((doc) => {\n          documents.push({...doc.data(),id:doc.id});\n        });\n        setNewDocs(documents);\n      });\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default ImageFirestore;\n","import React from \"react\";\nimport ImageFirestore from \"../Hooks/ImageFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ selectedNewImage }) => {\n  const { docs } = ImageFirestore(\"Images\");\n  return (\n    <div className=\"img-grid\">\n      {docs &&\n        docs.map((item) => (\n          <motion.div\n            layout\n            whileHover={{ opacity: 1 }}\n            className=\"img-wrap\"\n            onClick={() => selectedNewImage(item.url)}\n            key={item.id}\n          >\n            <motion.img src={item.url} alt=\"sorry! not available\" \n            initial={{opacity:0}}\n            animate={{opacity:1}}\n            transition={{delay:2}}\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Welcome to Photo Gallery</h2>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from \"react\";\nimport { storageRef, timeStamp } from \"../Firebase/firebaseConfig\";\nimport { firestoreRef } from \"../Firebase/firebaseConfig\";\n\nconst ImageStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const imageRef = storageRef.ref(file.name);\n    const imageurlRef = firestoreRef.collection(\"Images\");\n\n    imageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        const percent = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percent);\n      },\n      (error) => {\n        setError(error);\n      },\n      async () => {\n        const url = await imageRef.getDownloadURL();\n        const createdAt = timeStamp();\n        imageurlRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, error, url };\n};\n\nexport default ImageStorage;\n","import React from \"react\";\nimport ImageStorage from \"../Hooks/ImageStorage\";\nimport { useEffect } from \"react\";\nimport {motion} from 'framer-motion';\n\nconst Progressbar = ({ file, setFile }) => {\n  const { url, progress } = ImageStorage(file);\n  useEffect(()=>{\n    if(url)\n        setFile(null);\n  },[url,setFile])\n\n  return (\n      <motion.div\n        className=\"progress-bar\"\n        initial={{width:0}}\n        animate={{width:progress+\"%\"}}\n      >\n      </motion.div>\n  );\n};\n\nexport default Progressbar;\n","import React, { useState } from \"react\";\nimport Progressbar from \"./Progressbar\";\nimport \"../index.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Uploadimage = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fileChangeHandler = (e) => {\n    const selectedFile = e.target.files[0];\n    const fileTypes = [\"image/png\", \"image/jpeg\"];\n    if (selectedFile && fileTypes.includes(selectedFile.type)) {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError(\"You can upload (png or jpeg) files only\");\n    }\n  };\n  return (\n    <form>\n      <label>\n        <FontAwesomeIcon className=\"icon\" icon={faPlusCircle} />\n        <input\n          type=\"file\"\n          onChange={fileChangeHandler}\n        />\n      </label>\n      <div className=\"output\">\n        {file && <div>{file.name}</div>}\n        {error && <div style={{ color: \"red\" }}>{error}</div>}\n        {file && <Progressbar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default Uploadimage;\n","import React, { useState } from \"react\";\nimport ImageModal from \"./comps/ImageModal\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Title from \"./comps/Title\";\nimport Uploadimage from \"./comps/Uploadimage\";\nimport './index.css';\n\nfunction App() {\n  const [selectedImage, selectedNewImage] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title />\n      <Uploadimage />\n      <ImageGrid selectedNewImage={selectedNewImage} />\n      {selectedImage && (\n        <ImageModal\n          selectedImage={selectedImage}\n          selectedNewImage={selectedNewImage}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}